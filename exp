#!/bin/bash
. config/environments.sh
. config/applications.sh

#
# Set CLASSPATH to be canonical paths
#
function setupCLASSPATH {
	#
	# resolve the folder where this script is located, traversing any symlinks
	#
	PRG="$0"
	# loop while $PRG is a symlink
	while [ -h "$PRG" ] ; do
	  # figure out target of the symlink
	  ls=`ls -ld "$PRG"`
	  link=`expr "$ls" : '.*-> \(.*\)$'`
	  # traverse to the target of the symlink
	  if expr "$link" : '/.*' > /dev/null; then
	  PRG="$link"
	  else
	  PRG=`dirname "$PRG"`"/$link"
	  fi
	done

	#
	# PROJECT_HOME is where we live.  Lets get an exact path.
	PROJECT_HOME=`dirname "$PRG"`
	PROJECT_HOME=`cd "${PROJECT_HOME}" > /dev/null && pwd`
	export CLASSPATH=:$PROJECT_HOME/tools/oracle/ojdbc7.jar:$PROJECT_HOME/tools
}

help_and_usage() {
	echo "Usage: ${0##*/} <application alias> [<environment>]"
	echo "Help:  ${0##*/} exports application from an APEX environment"
	echo "       by default, it exports applications from the development environment"
	echo "       you can export all known application using 'all' instead of the application alias"
	echo
	known_apps
	echo
	known_env

}

export_app() {
	if [[ $appId == 0 ]] ; then
		return
	fi
	appAlias=${1:-$application}
	echo Exporting $appName from $environment environment

	#application export
	java oracle.apex.APEXExport -db $databaseUrl -user $databaseUser -password $databasePassword -applicationid $appId

	appVersion=$(cat f$appId.sql | grep 'p_flow_version' | tr -d "()'")
	appVersion=${appVersion##*>}

	lastModified=$(cat f$appId.sql | grep 'p_last_upd_yyyymmddhh24miss' | sort -u | tail -n 1 | tr -d "'")
	lastModified=${lastModified##*>}
	lastModified=${lastModified:2:2}${lastModified:4:2}${lastModified:6:2}-${lastModified:8:2}${lastModified:10:2}

	mv f$appId.sql "$appAlias $appVersion ($lastModified).sql"

	echo "   version $appVersion"
	echo "   modified at $lastModified"
}

#----------------------------------------------------------------------------------------------------------------------------------

application=$1
environment=${2:-"dev"}

if [[ -z $application || -z $environment ]] ; then
	help_and_usage
	exit 1
fi

setupCLASSPATH

set_env $environment
if [ ! -d "apex/$environment" ] ; then mkdir "apex/$environment" ; fi
cd apex/$environment

if [[ "$application" == "all" ]] ; then
	application=$(all_apps)
fi

for app in $application
do
	if [[ $environment = "stage" ]] ; then
		set_appId2 $app
	else
		set_appId1 $app
	fi
	export_app $app
done

# say "export complete"